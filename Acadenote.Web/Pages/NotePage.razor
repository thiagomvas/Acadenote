@page "/anotacao/{id}"
@using Acadenode.Core.Models
@using Acadenode.Core.Repositories
@using Acadenode.Core.Services
@inject INoteRepository _repo
@inject NavigationManager nav
@inject ColorUtility Color

@if (note == null)
{
    <PageTitle>Carregando...</PageTitle>
    <div style="display: flex; justify-content: center; align-items: center;">
        <OrbFX ShadowSpreadRadius="100">
            <LoadingMessage />
        </OrbFX>
    </div>
}
else
{
    <PageTitle>@note.Title</PageTitle>
    <NoteView Note="note" />
    @if (canEdit)
    {
        <Redirector Destination="@($"/editor/anotacao/{Id}")">
            <Acadebutton Color="@Color.Primary">Editar</Acadebutton>
        </Redirector>
    }
}

@code {
    [Parameter]
    public string Id { get; set; }

    private Note? note;
    //[Inject] private ILocalStorageService _storage { get; set; }
    //[Inject] private IAuthService _auth { get; set; }
    private bool canEdit = false;

    protected override async Task OnInitializedAsync()
    {
        note = await _repo.GetNoteByIdAsync(Id);
        if (note == null || note.Id == Note.NotFound.Id)
        {
            nav.NavigateTo("../404");
        }

        //
        //var cacheduser = await _storage.GetItem<User>("user");
        //if (cacheduser != null)
        //{
        //    Console.WriteLine("Usuário encontrado no cache!");
        //    if (await _auth.Validate(cacheduser.Token))
        //    {
        //        Console.WriteLine("Usuário logado!");
        //        if (cacheduser.Role.HasFlag(Role.Writer))
        //        {
        //            canEdit = true;
        //        }
        //    }
        //}
    }
}